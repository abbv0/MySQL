/*
Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
*/

update shop.users
set created_at = CURRENT_TIMESTAMP,
	updated_at = CURRENT_TIMESTAMP;

/*
Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR 
и в них долгое время помещались значения в формате "20.10.2017 8:10". Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.
*/

ALTER TABLE shop.users MODIFY created_at DATETIME;
ALTER TABLE shop.users MODIFY updated_at DATETIME;

/*
В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, 
если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, 
чтобы они выводились в порядке увеличения значения value. Однако, нулевые запасы должны выводиться в конце, после всех записей.
*/

use shop;
select value from storehouses_products order by(
case value when 0 then 2 else 1 end
) asc;

/*
Подсчитайте средний возраст пользователей в таблице users
*/

use shop; 
select avg(
    (YEAR(CURRENT_DATE) - YEAR(birthday_at)) -                            
    (DATE_FORMAT(CURRENT_DATE, '%m%d') < DATE_FORMAT(birthday_at, '%m%d')) 
  ) from users;
  
/*
Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.
*/

use shop;
select DAYNAME(CONCAT(year(NOW()), '-', SUBSTRING(birthday_at, 6,10))) as week_day,
COUNT(DAYNAME(CONCAT(year(NOW()), '-', SUBSTRING(birthday_at, 6, 10)))) as amount
from users
group by week_day;


